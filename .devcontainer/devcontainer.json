{
    "build": {
        "dockerfile": "./Dockerfile",
        "context": "."
    },
    "features": {
		"docker-in-docker": {
			"version": "latest",
			"moby": true,
			"dockerDashComposeVersion": "v1",
			"azureDnsAutoDetection": "true",
			"dockerDefaultAddressPool": "-",
			"installDockerBuildx": "true"
		},
		"ghcr.io/devcontainers/features/common-utils:2":{
            "installZsh": "true",
            "username": "vscode",
            "userUid": "1000",
            "userGid": "1000",
            "upgradePackages": "true"
        },
        "ghcr.io/devcontainers/features/python:1": "none",
        "ghcr.io/devcontainers/features/node:1": "none",
		"ghcr.io/devcontainers/features/git:1": {
            "version": "latest",
            "ppa": "false"
        }
    },
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"python.defaultInterpreterPath": "/usr/local/bin/python"
			},
			"extensions": [
				"hpargecruos.kodj",
				"genieai.chatgpt-vscode",
				"GitHub.copilot",
				"GitHub.copilot-labs"
			]
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "pip3 install --user -r requirements.txt",

	// Set `remoteUser` to `root` to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",

	// https://notes.alexkehayias.com/running-docker-compose-in-codespaces/
	//
	// Your code path from the .devcontainer directory
	// "workspaceFolder": "./app",
	// List of ports that you want to preview
	 "forwardPorts": [1234, 5678],
	// Script to run to bootstrap the app when the space is created
	"postCreateCommand": "./powerlevel10k/install.sh; .devcontainer/setup-script.sh",
	// Automatically start the app in subsequent sessions
	"postStartCommand": "cd app && docker-compose start",
	// Privileged flag is needed to run docker-in-docker, the volume
	// is needed or docker build will fail
	"runArgs": ["--volume=/var/lib/docker", "--privileged"]
}
